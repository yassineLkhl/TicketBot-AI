1. Nettoyer l‚Äôenvironnement

Avant de relancer :

docker-compose down -v


‚ö†Ô∏è V√©rifie aussi qu‚Äôaucun PostgreSQL local Windows ne tourne :

netstat -ano | findstr :5432
tasklist /FI "IMAGENAME eq postgres.exe"


üëâ Si tu vois postgres.exe c√¥t√© Windows : d√©sactive le service :

sc config postgresql-x64-13 start= disabled
sc config postgresql-x64-17 start= disabled
net stop postgresql-x64-13
net stop postgresql-x64-17

2. D√©marrer la base avec Docker
docker-compose up -d


Docker cr√©e :

User admin : postgres (password: devpass)

DB par d√©faut : ticketbot_dev

3. Configurer l‚Äôutilisateur applicatif

Connecte-toi en admin :

docker exec -it ticketbot-postgres psql -U postgres -d ticketbot_dev


Puis cr√©e ton user applicatif :

DROP USER IF EXISTS ticketbot;
CREATE USER ticketbot WITH PASSWORD 'devpass';
GRANT ALL PRIVILEGES ON DATABASE ticketbot_dev TO ticketbot;
GRANT ALL ON SCHEMA public TO ticketbot;


V√©rifie avec :

\du

4. V√©rifier la connexion

Depuis l‚Äôh√¥te :

psql "postgresql://ticketbot:devpass@127.0.0.1:5432/ticketbot_dev"


Tu dois entrer dans ticketbot_dev=#.

5. Configurer Prisma

Dans ton fichier .env :

DATABASE_URL="postgresql://ticketbot:devpass@localhost:5432/ticketbot_dev?schema=public"


Puis :

npx prisma db push


‚úÖ R√©sultat attendu :

Your database is now in sync with your Prisma schema.
‚úî Generated Prisma Client
